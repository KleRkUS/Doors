<!DOCTYPE html>
<html>
  <head>
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Doors</title>
    <meta name="description" content="">
    <link href="https://fonts.googleapis.com/css?family=Montserrat+Alternates|Open+Sans:300,400|Roboto:300,400,500,700&display=swap&subset=cyrillic" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"> 


    <%/* If you want to discourage search engines from indexing this site, uncomment the following line: */%>
    <%/* <meta name="robots" content="noindex"> */%>


    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->

    <script src="https://cdn.jsdelivr.net/npm/sails-hook-adminpanel@1.0.15/index.min.js"></script>
  </head>

  <body>
    <header>

  <div class="header-inner container">
    <div class="logo col-md-6 col-lg-6 col-sm-6 col-xs-6">
      <h1>Двери</h1>
      <h4>г.Белореченск</h4>
      <h4>ул.Интернациональная 85</h4>
    </div>

    <div class="col-md-2 col-lg-2 header-time">
      <span class="wrap-el">
            Режим работы:
            пн-пт 8:00-18:00
            сб-вс 9:00-17:00
      </span>
    </div>

    <div class="header-contacts col-md-4 col-lg-4">
      <span>
        +7 (981) 073-073-1
      </span>
      <ul class="webs">
        <li>
          <a href="">
            <img src="images/icons/vk-white.png" alt="vk">
          </a>
        </li>
        <li>
          <a href="https://instagram.com/dverint85?igshid=7pqqhdb1ba7">
            <img src="images/icons/insta-white.png" alt="insta">
          </a>  
        </li>
        <li>
          <a href="https://wa.me/79182142013">
            <img src="images/icons/whatsapp-white.png" alt="ok">
          </a>
        </li>
      </ul>
    </div>
    
    <div class="col-sm-6 col-xs-6 header-burger">
      <button id="header-burger-button">
        <i class="fa fa-bars el-transition"></i>
      </button>
    </div>
  </div>

  <menu class="container el-transition" id="header-menu">
    <li class="col-md-2 col-lg-2">
      <a href="#about" class="el-transition">
        О нас
      </a>
    </li>
    <li class="col-md-2 col-lg-2">
      <a href="#catalog" class="el-transition">
        Каталог
      </a>
    </li>
    <li class="col-md-2 col-lg-2">
      <a href="#more" class="el-transition">
        Подробнее
      </a>
    </li>
    <li class="col-md-2 col-lg-2">
      <a href="#distributers" class="el-transition">
        Поставщики
      </a>
    </li>
    <li class="col-md-2 col-lg-2">
      <a href="#offer" class="el-transition">
        Заказать
      </a>
    </li>
    <li class="col-md-2 col-lg-2">
      <a href="#contacts" class="el-transition">
        Контакты
      </a>
    </li>
  </menu>
</header>
    <%- body %>



    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like React, Vue.js, Angular, Ember, and Backbone
        require that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different view engine (handlebars, dust, pug/jade, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    <!--TEMPLATES END-->


    <!--
        Server-side View Locals
        ========================

        Sometimes, it's convenient to get access to your server-side view locals from
        client-side JavaScript.  This can improve page load times, remove the need for
        extra AJAX requests, and make your client-side code easier to understand and
        to maintain.  Sails provides a simple mechanism for accessing dynamic view
        locals: the "exposeLocalsToBrowser()" view partial.

        For more information on using this built-in feature, see:
        https://sailsjs.com/docs/concepts/views/locals#?escaping-untrusted-data-using-exposelocalstobrowser

    -->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/dependencies/sails.io.js"></script>
    <script src="/js/burger.js"></script>
    <script src="/js/info.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>